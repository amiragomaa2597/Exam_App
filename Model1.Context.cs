//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace sql_project
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ExamSYSEntities : DbContext
    {
        public ExamSYSEntities()
            : base("name=ExamSYSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Choice> Choices { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Stu_Answer> Stu_Answer { get; set; }
        public virtual DbSet<Stud_Course> Stud_Course { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Topic> Topics { get; set; }
    
        public virtual int Add_Ins_Course(Nullable<int> insId, Nullable<int> crsid)
        {
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("InsId", insId) :
                new ObjectParameter("InsId", typeof(int));
    
            var crsidParameter = crsid.HasValue ?
                new ObjectParameter("crsid", crsid) :
                new ObjectParameter("crsid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Ins_Course", insIdParameter, crsidParameter);
        }
    
        public virtual int AddAnswer(Nullable<int> stid, Nullable<int> qid, Nullable<int> exid, string answer)
        {
            var stidParameter = stid.HasValue ?
                new ObjectParameter("Stid", stid) :
                new ObjectParameter("Stid", typeof(int));
    
            var qidParameter = qid.HasValue ?
                new ObjectParameter("Qid", qid) :
                new ObjectParameter("Qid", typeof(int));
    
            var exidParameter = exid.HasValue ?
                new ObjectParameter("Exid", exid) :
                new ObjectParameter("Exid", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddAnswer", stidParameter, qidParameter, exidParameter, answerParameter);
        }
    
        public virtual int AddToDepartment(string deptName)
        {
            var deptNameParameter = deptName != null ?
                new ObjectParameter("DeptName", deptName) :
                new ObjectParameter("DeptName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddToDepartment", deptNameParameter);
        }
    
        public virtual int AddToInstructor(string name, Nullable<decimal> salary, Nullable<int> dept_id, string email, Nullable<int> age)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(decimal));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddToInstructor", nameParameter, salaryParameter, dept_idParameter, emailParameter, ageParameter);
        }
    
        public virtual int AddToStudent(string fname, string lname, string address, Nullable<int> age, Nullable<int> deptId, string email)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddToStudent", fnameParameter, lnameParameter, addressParameter, ageParameter, deptIdParameter, emailParameter);
        }
    
        public virtual ObjectResult<string> course_topics(Nullable<int> crs_Id)
        {
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("course_topics", crs_IdParameter);
        }
    
        public virtual int Delete_Choice(Nullable<int> q_Id, string choice)
        {
            var q_IdParameter = q_Id.HasValue ?
                new ObjectParameter("Q_Id", q_Id) :
                new ObjectParameter("Q_Id", typeof(int));
    
            var choiceParameter = choice != null ?
                new ObjectParameter("choice", choice) :
                new ObjectParameter("choice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Choice", q_IdParameter, choiceParameter);
        }
    
        public virtual int delete_course(Nullable<int> crs_Id)
        {
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_course", crs_IdParameter);
        }
    
        public virtual int delete_exam(Nullable<int> ex_Id)
        {
            var ex_IdParameter = ex_Id.HasValue ?
                new ObjectParameter("Ex_Id", ex_Id) :
                new ObjectParameter("Ex_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_exam", ex_IdParameter);
        }
    
        public virtual int Delete_Question(Nullable<int> q_Id, string model_Answer, string q_Title, Nullable<int> grade, string type, Nullable<int> crs_Id)
        {
            var q_IdParameter = q_Id.HasValue ?
                new ObjectParameter("Q_Id", q_Id) :
                new ObjectParameter("Q_Id", typeof(int));
    
            var model_AnswerParameter = model_Answer != null ?
                new ObjectParameter("Model_Answer", model_Answer) :
                new ObjectParameter("Model_Answer", typeof(string));
    
            var q_TitleParameter = q_Title != null ?
                new ObjectParameter("Q_Title", q_Title) :
                new ObjectParameter("Q_Title", typeof(string));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Question", q_IdParameter, model_AnswerParameter, q_TitleParameter, gradeParameter, typeParameter, crs_IdParameter);
        }
    
        public virtual int delete_topic(Nullable<int> top_Id)
        {
            var top_IdParameter = top_Id.HasValue ?
                new ObjectParameter("Top_Id", top_Id) :
                new ObjectParameter("Top_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_topic", top_IdParameter);
        }
    
        public virtual int DeleteAnswer(Nullable<int> stid, Nullable<int> qid, Nullable<int> exid)
        {
            var stidParameter = stid.HasValue ?
                new ObjectParameter("Stid", stid) :
                new ObjectParameter("Stid", typeof(int));
    
            var qidParameter = qid.HasValue ?
                new ObjectParameter("Qid", qid) :
                new ObjectParameter("Qid", typeof(int));
    
            var exidParameter = exid.HasValue ?
                new ObjectParameter("Exid", exid) :
                new ObjectParameter("Exid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAnswer", stidParameter, qidParameter, exidParameter);
        }
    
        public virtual int DeleteFromDepartment(Nullable<int> dept_Id)
        {
            var dept_IdParameter = dept_Id.HasValue ?
                new ObjectParameter("Dept_Id", dept_Id) :
                new ObjectParameter("Dept_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFromDepartment", dept_IdParameter);
        }
    
        public virtual int DeleteFromInstructor(Nullable<int> ins_Id)
        {
            var ins_IdParameter = ins_Id.HasValue ?
                new ObjectParameter("Ins_Id", ins_Id) :
                new ObjectParameter("Ins_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFromInstructor", ins_IdParameter);
        }
    
        public virtual int Deleteinscourse(Nullable<int> insId)
        {
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("InsId", insId) :
                new ObjectParameter("InsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Deleteinscourse", insIdParameter);
        }
    
        public virtual int DeleteStudentCourseGrade(Nullable<int> stuId, Nullable<int> crsId)
        {
            var stuIdParameter = stuId.HasValue ?
                new ObjectParameter("StuId", stuId) :
                new ObjectParameter("StuId", typeof(int));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("CrsId", crsId) :
                new ObjectParameter("CrsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStudentCourseGrade", stuIdParameter, crsIdParameter);
        }
    
        public virtual int DeleteStudentRecord(Nullable<int> stuId)
        {
            var stuIdParameter = stuId.HasValue ?
                new ObjectParameter("StuId", stuId) :
                new ObjectParameter("StuId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStudentRecord", stuIdParameter);
        }
    
        public virtual ObjectResult<exam_Questions_choices_Result> exam_Questions_choices(Nullable<int> ex_Id)
        {
            var ex_IdParameter = ex_Id.HasValue ?
                new ObjectParameter("Ex_Id", ex_Id) :
                new ObjectParameter("Ex_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<exam_Questions_choices_Result>("exam_Questions_choices", ex_IdParameter);
        }
    
        public virtual ObjectResult<string> GenerateExam(Nullable<int> course)
        {
            var courseParameter = course.HasValue ?
                new ObjectParameter("Course", course) :
                new ObjectParameter("Course", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GenerateExam", courseParameter);
        }
    
        public virtual int Insert_Choices(Nullable<int> q_Id, string choice)
        {
            var q_IdParameter = q_Id.HasValue ?
                new ObjectParameter("Q_Id", q_Id) :
                new ObjectParameter("Q_Id", typeof(int));
    
            var choiceParameter = choice != null ?
                new ObjectParameter("choice", choice) :
                new ObjectParameter("choice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Choices", q_IdParameter, choiceParameter);
        }
    
        public virtual int Insert_Question(string model_Answer, string q_Title, Nullable<int> grade, string type, Nullable<int> crs_Id)
        {
            var model_AnswerParameter = model_Answer != null ?
                new ObjectParameter("Model_Answer", model_Answer) :
                new ObjectParameter("Model_Answer", typeof(string));
    
            var q_TitleParameter = q_Title != null ?
                new ObjectParameter("Q_Title", q_Title) :
                new ObjectParameter("Q_Title", typeof(string));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Question", model_AnswerParameter, q_TitleParameter, gradeParameter, typeParameter, crs_IdParameter);
        }
    
        public virtual ObjectResult<NameOfCourseAndNumOfStudByInsId_Result> NameOfCourseAndNumOfStudByInsId(Nullable<int> insId)
        {
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("InsId", insId) :
                new ObjectParameter("InsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NameOfCourseAndNumOfStudByInsId_Result>("NameOfCourseAndNumOfStudByInsId", insIdParameter);
        }
    
        public virtual int new_course(string crs_Name)
        {
            var crs_NameParameter = crs_Name != null ?
                new ObjectParameter("Crs_Name", crs_Name) :
                new ObjectParameter("Crs_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("new_course", crs_NameParameter);
        }
    
        public virtual int new_exam(Nullable<int> time, Nullable<int> crs_Id)
        {
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(int));
    
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("new_exam", timeParameter, crs_IdParameter);
        }
    
        public virtual int new_topic(string top_Name, Nullable<int> crs_Id)
        {
            var top_NameParameter = top_Name != null ?
                new ObjectParameter("Top_Name", top_Name) :
                new ObjectParameter("Top_Name", typeof(string));
    
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("new_topic", top_NameParameter, crs_IdParameter);
        }
    
        public virtual ObjectResult<SelectStudentAnswer_Result> SelectStudentAnswer(Nullable<int> stid)
        {
            var stidParameter = stid.HasValue ?
                new ObjectParameter("Stid", stid) :
                new ObjectParameter("Stid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStudentAnswer_Result>("SelectStudentAnswer", stidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ShowExam(Nullable<int> course)
        {
            var courseParameter = course.HasValue ?
                new ObjectParameter("Course", course) :
                new ObjectParameter("Course", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ShowExam", courseParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int StudentCourseGrade(Nullable<int> crsId, Nullable<int> stId, Nullable<int> grade)
        {
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("CrsId", crsId) :
                new ObjectParameter("CrsId", typeof(int));
    
            var stIdParameter = stId.HasValue ?
                new ObjectParameter("StId", stId) :
                new ObjectParameter("StId", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentCourseGrade", crsIdParameter, stIdParameter, gradeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> StudentGradesById(Nullable<int> stuId)
        {
            var stuIdParameter = stuId.HasValue ?
                new ObjectParameter("StuId", stuId) :
                new ObjectParameter("StuId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("StudentGradesById", stuIdParameter);
        }
    
        public virtual ObjectResult<StudentInfoByDeptId_Result> StudentInfoByDeptId(Nullable<int> deptId)
        {
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentInfoByDeptId_Result>("StudentInfoByDeptId", deptIdParameter);
        }
    
        public virtual int update_course(Nullable<int> crs_Id, string crs_Name)
        {
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            var crs_NameParameter = crs_Name != null ?
                new ObjectParameter("Crs_Name", crs_Name) :
                new ObjectParameter("Crs_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_course", crs_IdParameter, crs_NameParameter);
        }
    
        public virtual int update_exam(Nullable<int> ex_Id, Nullable<int> time, Nullable<int> crs_Id)
        {
            var ex_IdParameter = ex_Id.HasValue ?
                new ObjectParameter("Ex_Id", ex_Id) :
                new ObjectParameter("Ex_Id", typeof(int));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(int));
    
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_exam", ex_IdParameter, timeParameter, crs_IdParameter);
        }
    
        public virtual int Update_ins_course(Nullable<int> insId, Nullable<int> crsid)
        {
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("InsId", insId) :
                new ObjectParameter("InsId", typeof(int));
    
            var crsidParameter = crsid.HasValue ?
                new ObjectParameter("crsid", crsid) :
                new ObjectParameter("crsid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_ins_course", insIdParameter, crsidParameter);
        }
    
        public virtual int Update_Question(Nullable<int> q_Id, string model_Answer, string q_Title, Nullable<int> grade, string type, Nullable<int> crs_Id)
        {
            var q_IdParameter = q_Id.HasValue ?
                new ObjectParameter("Q_Id", q_Id) :
                new ObjectParameter("Q_Id", typeof(int));
    
            var model_AnswerParameter = model_Answer != null ?
                new ObjectParameter("Model_Answer", model_Answer) :
                new ObjectParameter("Model_Answer", typeof(string));
    
            var q_TitleParameter = q_Title != null ?
                new ObjectParameter("Q_Title", q_Title) :
                new ObjectParameter("Q_Title", typeof(string));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Question", q_IdParameter, model_AnswerParameter, q_TitleParameter, gradeParameter, typeParameter, crs_IdParameter);
        }
    
        public virtual int update_question_choice(Nullable<int> q_Id, string choice, string oldchoice)
        {
            var q_IdParameter = q_Id.HasValue ?
                new ObjectParameter("Q_Id", q_Id) :
                new ObjectParameter("Q_Id", typeof(int));
    
            var choiceParameter = choice != null ?
                new ObjectParameter("choice", choice) :
                new ObjectParameter("choice", typeof(string));
    
            var oldchoiceParameter = oldchoice != null ?
                new ObjectParameter("oldchoice", oldchoice) :
                new ObjectParameter("oldchoice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_question_choice", q_IdParameter, choiceParameter, oldchoiceParameter);
        }
    
        public virtual int update_topic(Nullable<int> top_Id, string top_Name, Nullable<int> crs_Id)
        {
            var top_IdParameter = top_Id.HasValue ?
                new ObjectParameter("Top_Id", top_Id) :
                new ObjectParameter("Top_Id", typeof(int));
    
            var top_NameParameter = top_Name != null ?
                new ObjectParameter("Top_Name", top_Name) :
                new ObjectParameter("Top_Name", typeof(string));
    
            var crs_IdParameter = crs_Id.HasValue ?
                new ObjectParameter("Crs_Id", crs_Id) :
                new ObjectParameter("Crs_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_topic", top_IdParameter, top_NameParameter, crs_IdParameter);
        }
    
        public virtual int UpdateDepartmentName(Nullable<int> dept_Id, string deptName)
        {
            var dept_IdParameter = dept_Id.HasValue ?
                new ObjectParameter("Dept_Id", dept_Id) :
                new ObjectParameter("Dept_Id", typeof(int));
    
            var deptNameParameter = deptName != null ?
                new ObjectParameter("DeptName", deptName) :
                new ObjectParameter("DeptName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDepartmentName", dept_IdParameter, deptNameParameter);
        }
    
        public virtual int UpdateInstructor(Nullable<int> ins_Id, string name, Nullable<decimal> salary, Nullable<int> dept_id, string email, Nullable<int> age)
        {
            var ins_IdParameter = ins_Id.HasValue ?
                new ObjectParameter("Ins_Id", ins_Id) :
                new ObjectParameter("Ins_Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(decimal));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInstructor", ins_IdParameter, nameParameter, salaryParameter, dept_idParameter, emailParameter, ageParameter);
        }
    
        public virtual int UpdateStudentAnswer(Nullable<int> stid, Nullable<int> qid, Nullable<int> exid, string answer)
        {
            var stidParameter = stid.HasValue ?
                new ObjectParameter("Stid", stid) :
                new ObjectParameter("Stid", typeof(int));
    
            var qidParameter = qid.HasValue ?
                new ObjectParameter("Qid", qid) :
                new ObjectParameter("Qid", typeof(int));
    
            var exidParameter = exid.HasValue ?
                new ObjectParameter("Exid", exid) :
                new ObjectParameter("Exid", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudentAnswer", stidParameter, qidParameter, exidParameter, answerParameter);
        }
    
        public virtual int UpdateStudentCourseGrade(Nullable<int> crsId, Nullable<int> stuId, Nullable<int> grade)
        {
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("CrsId", crsId) :
                new ObjectParameter("CrsId", typeof(int));
    
            var stuIdParameter = stuId.HasValue ?
                new ObjectParameter("StuId", stuId) :
                new ObjectParameter("StuId", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudentCourseGrade", crsIdParameter, stuIdParameter, gradeParameter);
        }
    
        public virtual int UpdateStudentRecord(Nullable<int> stuId, string fname, string lname, string address, Nullable<int> age, Nullable<int> deptId, string email)
        {
            var stuIdParameter = stuId.HasValue ?
                new ObjectParameter("StuId", stuId) :
                new ObjectParameter("StuId", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudentRecord", stuIdParameter, fnameParameter, lnameParameter, addressParameter, ageParameter, deptIdParameter, emailParameter);
        }
    
        public virtual ObjectResult<ViewQuest_and_Ans_for_Student_Result> ViewQuest_and_Ans_for_Student(Nullable<int> eXid, Nullable<int> stid)
        {
            var eXidParameter = eXid.HasValue ?
                new ObjectParameter("EXid", eXid) :
                new ObjectParameter("EXid", typeof(int));
    
            var stidParameter = stid.HasValue ?
                new ObjectParameter("Stid", stid) :
                new ObjectParameter("Stid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewQuest_and_Ans_for_Student_Result>("ViewQuest_and_Ans_for_Student", eXidParameter, stidParameter);
        }
    }
}
